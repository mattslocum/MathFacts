{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/grid-item/grid-item.component.ts","./src/app/grid-item/grid-item.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  gridSize = new Array(10);\n\n  hoverColumn = null;\n  hoverRow = null;\n}\n","<div class=\"grid\">\n  <div class=\"row\">\n    <div class=\"box\"></div>\n    <div *ngFor=\"let user of gridSize; let x = index;\" class=\"header box\"><span class=\"text\">{{x + 1}}</span></div>\n  </div>\n  <div *ngFor=\"let user of gridSize; let y = index;\" class=\"row\">\n    <div class=\"box\"><div class=\"row-header\"><span class=\"text\">{{y + 1}}</span></div></div>\n    <div *ngFor=\"let user of gridSize; let x = index;\" class=\"box box-number\"\n         [class.hover]=\"hoverColumn === x + 1\"\n         [class.hover2]=\"(hoverRow === x + 1 && hoverColumn === y + 1)\"\n    >\n      <app-grid-item [column]=\"x + 1\" [row]=\"y + 1\" (onHoverColumn)=\"hoverColumn = $event\" (onHoverRow)=\"hoverRow = $event\"></app-grid-item>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { GridItemComponent } from './grid-item/grid-item.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GridItemComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, EventEmitter, HostListener, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-grid-item',\n  templateUrl: './grid-item.component.html',\n  styleUrls: ['./grid-item.component.scss']\n})\nexport class GridItemComponent implements OnInit {\n\n  @Input() column: number;\n\n  @Input() row: number;\n\n  @Output() onHoverColumn = new EventEmitter<number>();\n\n  @Output() onHoverRow = new EventEmitter<number>();\n\n  public isVisible: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  @HostListener(\"click\") onClick() {\n    this.isVisible = !this.isVisible;\n  }\n\n  onMouseOver() {\n    this.onHoverColumn.next(this.column);\n    this.onHoverRow.next(this.row);\n  }\n\n  onMouseOut() {\n    this.onHoverColumn.next(null);\n    this.onHoverRow.next(null);\n  }\n\n}\n","<div [class.visible]=\"isVisible\" (mouseover)=\"onMouseOver()\" (mouseout)=\"onMouseOut()\">\n  <span>{{row * column}}</span>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}